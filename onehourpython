#一小時學python
#2018/4/1


======================================
{1}輸入與輸出 USER INPUTS AND OUTPUTS

[1.1]輸入:input | Raw_input

求圓面積
--------------------------------------
#!/usr/bin/env python

#-*- coding:utf-8 –*-

# radius = 20 #半徑等於20
#輸入半徑
radius = eval(input("輸入半徑: "))

# 計算半徑
area = radius * radius * 3.14159

# 印出結果
print("半徑", radius, "的圓面積為", area)
#輸入10
#輸出314.159
----------------------------------------


同時指定
----------------------------------------
#!/usr/bin/env python
#-*-coding:utf-8 -*-

#輸入number1,number2,number3
number1, number2, number3 = eval(input("輸入三個以逗號分隔的數字: "))

#計算平均
average = (number1 + number2 + number3) / 3

#輸出
print(number1, number2, number3,"的平均是", average)

#輸入4,8,14
#輸出9.0
-----------------------------------------


[1.2]輸出:print

-----------------------------------------
>>> q = 259
>>> p = 0.038
>>> print(q, p, p * q)

#259 0.038 9.842

>>> print(q, p, p * q, sep=",")

#259,0.038,9.842

>>> print(q, p, p * q, sep=" :-) ")

#259:-)0.038:-)9.842

>>> print(str(q) + " " + str(p) + " " + str(p * q))

#259 0.038 9.842
------------------------------------------

[1.3]格式化輸出Formatted Output
http://www.runoob.com/python/att-string-format.html

------------------------------------------
#!/usr/bin/python
# -*- coding: UTF-8 -*-
 
print("{0} love {1}......{2}".format("I","listening","classical Music"))
#I love listening classical Music
 
#透過字典設置變數
info={"name":"Amy", "grade": "100"}

print("姓名：{name}, 成績:{grade}".format(**info))
#姓名:Amy, 成績:100


#透過列表設置變數
my_list = ["Amy",'100']

print("姓名: {0[0]}, 成績: {0[1]}".format(my_list))
#姓名: Amy, 成績: 100
-----------------------------------------------

[1.4]運算子
餘數運算子 (remainder|modulo)


#以秒表示的總時間長，取得分鐘數及剩餘的秒數
-----------------------------------------------
#!/usr/bin/env python
#-*-coding:utf-8-*-

seconds = eval(input("輸入整數秒: "))
minutes = seconds//60     # 分鐘
remainingSeconds = seconds % 60   # 餘數==>秒
print(seconds, "是", minutes,"分鐘又", remainingSeconds, "秒")
#輸入9999
#輸出9999是 166 分鐘又 39 秒
------------------------------------------------



================================================
{2}資料結構














================================================
{3}迴圈與選擇


[3.1]選擇:If |if-else| ..沒有switch:

猜數字游戲 I
----------------------------------------------------
#!/usr/bin/python
# -*- coding: UTF-8 -*-

number = 1235784

guess = int(input("輸入一整數 : "))

if guess == number:
  print ("你猜到了~~哈哈!") #一定要tab
  print ("flag: BreakALL{It is easy to write if statement}!" )
elif guess < number:
  print ("Nono~too small~" )
else:
  print ("Nope~lower!")

print ("Done")
-----------------------------------------------------

-----------------------------------------------------
#!/usr/bin/python
# -*- coding: UTF-8 -*-
print("")
print("西元年代對應到的十二生肖")
print("")
year = eval(input("請輸入你出生的年代: "))
print("")
zodiacYear = year % 12 
if zodiacYear == 0:
    print("monkey===猴子")
elif zodiacYear == 1:
    print("rooster雞")
elif zodiacYear == 2:
    print("dog狗")
elif zodiacYear == 3:
    print("pig豬")
elif zodiacYear == 4: 
    print("rat鼠")
elif zodiacYear == 5: 
    print("ox牛")
elif zodiacYear == 6:
    print("tiger虎")
elif zodiacYear == 7:
    print("rabbit兔")
elif zodiacYear == 8:
    print("dragon龍")
elif zodiacYear == 9:
    print("snake蛇")
elif zodiacYear == 10:
    print("horse馬")
else: 
    print("sheep羊")
-----------------------------------------------------

[3.2]for loop

-----------------------------------------------------
words = ['pig', 'plastic', 'biodegradable']
for w in words:
   print(w, len(w))
#pig 3
#plastic 7
#biodegradable 13
-----------------------------------------------------

-----------------------------------------------------
#!/usr/bin/python
# -*- coding: UTF-8 -*-

for i in range(1,5): #i在1~4
	for j in range(1,5): #j在1~4
		for k in range(1,5): #k在1~4
			if(i!=j) and (j!=k) and (i!=k): #如果三數皆不相等
				print(i,j,k)
-----------------------------------------------------


#2018/4/2

================================================================
【Python 練習實例81】
題目：809*??=800*??+9*?? 其中??代表的兩位數, 809*??為四位數，
8*??的結果為兩位數，9*??的結果為3位數。
求??代表的兩位數，及809*??後的結果。
================================================================
----------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

for i in range(10,100):
	x=i*809/1000
	y=8*i/10
	z=9*i/100
	if(x<10)and(x>=1)and(y<10)and(y>=1)and(z<10)and(z>=1):
		print(809*i,"= 800 *",i,"+ 9 *",i)
----------------------------------------------------------------



[3.3]while 迴圈

猜數字遊戲 II
----------------------------------------------------------------
#!usr/bin/python3
#-*- coding:utf-8 -*-

import random

x=random.randint(1,100)#產生隨機數(偽)


while(1): #無窮迴圈
	num=int(input("輸入一整數: "))#輸入一整數，一定要int()包含才會是int!
	if num==x:
		print("恭喜猜中了!")
		print("flag=BreakALL{you have done a good guess}")
		break #直到猜中才跳出
	elif num>x:
		print(num,"太大了!")
	else:
		print("比",num,"大一點!")
-----------------------------------------------------------------



=================================================================
[程式開發作業]最大公因數
=================================================================
-----------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

num1,num2=eval(input("輸入兩整數以逗號隔開:"))#輸入兩整數

if (num1<num2):
	num1,num2=num2,num1 #如果num1小於num2則交換兩值

while(num1%num2!= 0): #如果不整除就繼續做
	temp=num2         #num2給num1，而num2則為餘數
	num2=num1%num2
	num1=temp
print("gcd:",num2)
-----------------------------------------------------------------


[3.3]range
range(start, stop[, step])


範例:range(100)
#range(0,100)

範例:range(1, 101)
#range(1,101)

範例:range(0, 10, 2)
#range(0, 10, 2)

範例:range(0, -10, -1)
range(0, -10, -1)

-----------------------------------------------------------------
#!/usr/bin/python
# -*- coding: UTF-8 -*-
 
a = "breakall"
for i in range(len(a)):
    print(a[i])
#b
#r
#e
#a
#k
#a
#l
#l
-----------------------------------------------------------------
-----------------------------------------------------------------
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
 
a = 0
for i in range(1,101):
    a+=i
print("sigma 1~100 是:",a)

#sigma 1~100 是: 5050
-----------------------------------------------------------------

=================================================================
【Python 練習實例30】
輸入一個5位數，判斷它是不是回文數。
12321是回文數，個位與萬位相同，十位與千位相同。
=================================================================
-----------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf8 -*-

x=int(input("輸入一五位數:"))
y=str(x)
t=1 #旗標

for i in range(int(len(y)/2)):
	if(y[i]!=y[len(y)-i-1]):
		t=0 #如果y[i]不等於y[len(y)-i-1]),旗標變0並跳離迴圈
		break
if(t==1):
	print(x,"是回文數!")
else:
	print(x,"不是回文數!")
------------------------------------------------------------------

nested loop 巢狀迴圈
==================================================================
[程式開發作業]99乘法表
==================================================================
------------------------------------------------------------------
#!usr/bin/python3
#-*- coding:utf-8 -*-

for i in range(1,10):
	for j in range(1,10):
		print(i,"*",j,"=",i*j)
------------------------------------------------------------------


[4]函式/函數/function

================================================================
【Python 練習實例47】練習撰寫函式swap(a,b)
寫一個函式將輸入的兩個變數值互換
================================================================
----------------------------------------------------------------
#!/usr/bin/pyhton3
#-*- coding:utf-8 -*-

def swap(a,b):
	a,b=b,a #交換兩值
	return (a,b)#回傳

a=2
b=3
print("a =",a,",b =",b)
#a = 2 , b = 3
a,b=swap(a,b)
print("a =",a,",b =",b)
#a = 3 , b = 2
------------------------------------------------------------------

------------------------------------------------------------------
#!/usr/bin/python3
# -*- coding: UTF-8 -*- 

def crypt(source, key):
    from itertools import cycle #載入itertools函式庫cycle函式
    result = '' #結果將寫在result
    temp = cycle(key)#key是HappyHackingHigh，所以temp分別是H,a,p,p,y,H,a,c,k,i,n,g,H,i,g,h
    for ch in source: #字串ch在source裡
        result = result + chr(ord(ch) ^ ord(next(temp))) #將ch和temp做xor運算然後加進result裡，next()下一個迭代，ord()轉ascii
    return result

source = 'BreakALLCTF_IknowhowtoXORRRRing'
key = 'HappyHackingHigh'

print('未加密的明文:'+source)
encrypted = crypt(source, key)
print('加密過的密文:'+encrypted)
decrypted = crypt(encrypted, key)
print('解密過的答案:'+decrypted)
print('使用的金鑰:'+ key)
------------------------------------------------------------------

#2018/4/4

[4.2]遞迴函式==recursive vs iterative(loop)
==================================================================
1.[程式開發作業]費氏數列
2.[程式開發作業]n!
3.[程式開發作業]河內塔
==================================================================
1.費氏數列

迴圈版本:
------------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

def fibo(n):
    a,b = 0,1
    for i in range(n): #i在0~n-11不斷執行
        a,b = b,a+b #b的值給a，而原本a+b的值給b
    return a #回傳a值
	
x=int(input("輸入一整數: "))
for i in range(x):
	print (fibo(i))
------------------------------------------------------------------

遞迴版本:
------------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

def fibo(n):
	if(n==0): #如果n等於0，則回傳0
		return 0
	elif(n==1): #如果n等於1，則回傳1
		return 1
	else:
		return fibo(n-1)+fibo(n-2) #其他則回傳fibo(n-1)+fibo(n-2)

a=int(input("輸入一整數: "))
for i in range(a):
	print(fibo(i))	
------------------------------------------------------------------


2.n!
------------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

a=1
x=int(input("輸入一整數: "))

for i in range(x): #i在0~x-1
	a*=i+1
print (a)
------------------------------------------------------------------

3.河內塔
------------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

cnt=0
def hanoi(n,a,b,c):
	if(n<0):
		return
	elif(n==1):
		print(cnt+1,":",a,"柱的第",n,"個圓環->",c,"柱")
	else:
		hanoi(n-1,a,c,b)
		print(cnt+1,":",a,"柱的第",n,"個圓環->",c,"柱")
		hanoi(n-1,b,a,c)

hanoi(5,"A","B","C")
------------------------------------------------------------------
==================================================================
【Python 練習實例28】
有5個人坐在一起，
問第五個人多少歲？他說比第4個人大2歲。
問第4個人歲數，他說比第3個人大2歲。
問第三個人，又說比第2人大兩歲。
問第2個人，說比第一個人大兩歲。
最後問第一個人，他說是10歲。
請問第五個人多大？
==================================================================
------------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-

def f(n):
	if(n==1):
		return 10
	else:
		return f(n-1)+2
		
print("答案:",f(5),"歲")
#答案: 18 歲
------------------------------------------------------------------


-----------------------------------------------------------------
[4.3]匿名函式及lambda運算式

-----------------------------------------------------------------

[4.4]python內建函式Built-in Functions:
https://docs.python.org/2/library/functions.html


dir(__builtins__)
help('math')
help(id)

import sys
print(sys.builtin_module_names)
-------------------------------------------------------------------
#Ascii code

ord('a') #97
chr(97) #'a'
chr(ord('A')+1)#'b'
-------------------------------------------------------------------

[4.5]使用函式來模組化程式**

步驟一:先將常用的功能寫成函式MyGCD.py
-------------------------------------------------------------------
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
# Return the gcd of two integers 
def gcd(n1, n2):
    gcd = 1 # Initial gcd is 1
    k = 2   # Possible gcd

    while k <= n1 and k <= n2:
        if n1 % k == 0 and n2 % k == 0:
            gcd = k # Update gcd
        k += 1

    return gcd # Return gcd

--------------------------------------------------------------------

步驟二:在主程式呼叫函式MyGCD.py

--------------------------------------------------------------------
#!/usr/bin/python3
# -*- coding: UTF-8 -*-

from MyGCD import gcd # 載入要用的模組

# 請使用者輸入兩個整數
n1 = eval(input("請輸入第一個整數: "))
n2 = eval(input("請輸入第二個整數 "))

# 輸出兩個整數的最大公因數
print("兩個整數的最大公因數", n1,
    "and", n2, "is", gcd(n1, n2))
--------------------------------------------------------------------

[5]標準函式庫The Python Standard Library[1][2][3][4]5[6][7]
ascii,base64,hashlib

--------------------------------------------------------------------
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
import time
import math

start = time.time() #取得目前時間
for i in range(10000000):
    math.sin(i)
print('Time Used:', time.time()-start)	#輸出所耗時間
--------------------------------------------------------------------

#hashlib
--------------------------------------------------------------------
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
import hashlib

a = 'HappyCTF{python hashlib is good}'

print (hashlib.md5(a.encode('utf-8')).hexdigest())
#0122ec19966df149b9092520456c2861
print (hashlib.sha1(a.encode('utf-8')).hexdigest())
#61df478d73267ca3ab0262142d1e93058c7ce72c
print (hashlib.sha224(a).hexdigest())
#e2af3b8eba5418746239bf98698913e837f91f05be68610561f38e38
print (hashlib.sha256(a).hexdigest())
#768169b24f5cc9d41155368edee3d59b9b9313c4b1e275040b66d6729925e56a
print (hashlib.sha384(a).hexdigest())
#f5a91eca77797b068505ee1032d7b1e86b83fb03a0190fd96af733125b9ad2556ef48524e751275427e8c3d544b54b38
print (hashlib.sha512(a).hexdigest())
#5d2845ae044290072845d42d3171dad3a5df60596edf2e3098d04c265b9c48f28ee649eda9b32349a7e74aee437e4bb6d5fb5278612b5afc7c4a7665dcd51497
--------------------------------------------------------------------

#Base64編碼與解碼
--------------------------------------------------------------------
import base64
s = ‘FunnyCTF{BasE64 encoding is fufufufun!}'
a = base64.b64encode(s)
print a
RnVubnlDVEZ7QmFzRTY0IGVuY29kaW5nIGlzIGZ1ZnVmdWZ1biF9
print base64.b64decode(a)
#FunnyCTF{BasE64 encoding is fufufufun!}
c = base64.b32encode(s)
print c
#IZ2W43TZINKEM62CMFZUKNRUEBSW4Y3PMRUW4ZZANFZSAZTVMZ2WM5LGOVXCC7I=
print base64.b32decode(c)
#FunnyCTF{BasE64 encoding is fufufufun!}
---------------------------------------------------------------------

#binascii
---------------------------------------------------------------------
#!/usr/bin/python3
#-*- coding:utf-8 -*-
import binascii
a = b'HappyCTF{Useful tools binascii}'
b = binascii.b2a_hex(a)
print (b)
print (binascii.a2b_hex(b))
c = binascii.hexlify(a)
print (c)
print (binascii.unhexlify(c))
---------------------------------------------------------------------
[6]第三方模組[1][2][3][4]5[6][7]......[X]
需要安裝,也要import

PyPI - the Python Package Index
https://pypi.python.org/pypi
-------------------------------------
安裝模組:
pip list
pip install XXXXX
pip uninstall XXXXX
pip install --upgrade XXXX  #升級模組
-------------------------------------
pycrypto
pycrypto 2.6.1
Cryptographic modules for Python.


[7]各種類型檔案存取[1][2][3][4]5[6][7]

===========================================================================
【Python 練習範例98】
從鍵盤輸入一個字串，將小寫字母全部轉換成大寫字母，
然後輸出到一個檔"test"中保存。
Python 2.7:OK
Python 3.6
===========================================================================
---------------------------------------------------------------------------
#!/usr/bin/python
# -*- coding: UTF-8 -*-
 
if __name__ == '__main__': #如果模塊是直接被執行，則執行函式，如果模塊是被導入，則不執行
    fp = open('test.txt','w')#打開可寫的test.txt
    string = raw_input('please input a string:\n')
    string = string.upper()
    fp.write(string)#寫入test.txt
    fp = open('test.txt','r')#打開test.txt可讀
    print fp.read() #印出test.txt
    fp.close() #關閉test.txt
---------------------------------------------------------------------------





































